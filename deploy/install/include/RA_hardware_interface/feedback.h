// Generated by gencpp from file RA_hardware_interface/feedback.msg
// DO NOT EDIT!


#ifndef RA_HARDWARE_INTERFACE_MESSAGE_FEEDBACK_H
#define RA_HARDWARE_INTERFACE_MESSAGE_FEEDBACK_H

#include <ros/service_traits.h>


#include <RA_hardware_interface/feedbackRequest.h>
#include <RA_hardware_interface/feedbackResponse.h>


namespace RA_hardware_interface
{

struct feedback
{

typedef feedbackRequest Request;
typedef feedbackResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct feedback
} // namespace RA_hardware_interface


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::RA_hardware_interface::feedback > {
  static const char* value()
  {
    return "64b7d5a934e60038fcb2666a62ef99e5";
  }

  static const char* value(const ::RA_hardware_interface::feedback&) { return value(); }
};

template<>
struct DataType< ::RA_hardware_interface::feedback > {
  static const char* value()
  {
    return "RA_hardware_interface/feedback";
  }

  static const char* value(const ::RA_hardware_interface::feedback&) { return value(); }
};


// service_traits::MD5Sum< ::RA_hardware_interface::feedbackRequest> should match
// service_traits::MD5Sum< ::RA_hardware_interface::feedback >
template<>
struct MD5Sum< ::RA_hardware_interface::feedbackRequest>
{
  static const char* value()
  {
    return MD5Sum< ::RA_hardware_interface::feedback >::value();
  }
  static const char* value(const ::RA_hardware_interface::feedbackRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::RA_hardware_interface::feedbackRequest> should match
// service_traits::DataType< ::RA_hardware_interface::feedback >
template<>
struct DataType< ::RA_hardware_interface::feedbackRequest>
{
  static const char* value()
  {
    return DataType< ::RA_hardware_interface::feedback >::value();
  }
  static const char* value(const ::RA_hardware_interface::feedbackRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::RA_hardware_interface::feedbackResponse> should match
// service_traits::MD5Sum< ::RA_hardware_interface::feedback >
template<>
struct MD5Sum< ::RA_hardware_interface::feedbackResponse>
{
  static const char* value()
  {
    return MD5Sum< ::RA_hardware_interface::feedback >::value();
  }
  static const char* value(const ::RA_hardware_interface::feedbackResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::RA_hardware_interface::feedbackResponse> should match
// service_traits::DataType< ::RA_hardware_interface::feedback >
template<>
struct DataType< ::RA_hardware_interface::feedbackResponse>
{
  static const char* value()
  {
    return DataType< ::RA_hardware_interface::feedback >::value();
  }
  static const char* value(const ::RA_hardware_interface::feedbackResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // RA_HARDWARE_INTERFACE_MESSAGE_FEEDBACK_H
