// Generated by gencpp from file ros_control_boilerplate/driver.msg
// DO NOT EDIT!


#ifndef ROS_CONTROL_BOILERPLATE_MESSAGE_DRIVER_H
#define ROS_CONTROL_BOILERPLATE_MESSAGE_DRIVER_H

#include <ros/service_traits.h>


#include <ros_control_boilerplate/driverRequest.h>
#include <ros_control_boilerplate/driverResponse.h>


namespace ros_control_boilerplate
{

struct driver
{

typedef driverRequest Request;
typedef driverResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct driver
} // namespace ros_control_boilerplate


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ros_control_boilerplate::driver > {
  static const char* value()
  {
    return "6f5723450e3c67d0d72065dca6e91464";
  }

  static const char* value(const ::ros_control_boilerplate::driver&) { return value(); }
};

template<>
struct DataType< ::ros_control_boilerplate::driver > {
  static const char* value()
  {
    return "ros_control_boilerplate/driver";
  }

  static const char* value(const ::ros_control_boilerplate::driver&) { return value(); }
};


// service_traits::MD5Sum< ::ros_control_boilerplate::driverRequest> should match
// service_traits::MD5Sum< ::ros_control_boilerplate::driver >
template<>
struct MD5Sum< ::ros_control_boilerplate::driverRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ros_control_boilerplate::driver >::value();
  }
  static const char* value(const ::ros_control_boilerplate::driverRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ros_control_boilerplate::driverRequest> should match
// service_traits::DataType< ::ros_control_boilerplate::driver >
template<>
struct DataType< ::ros_control_boilerplate::driverRequest>
{
  static const char* value()
  {
    return DataType< ::ros_control_boilerplate::driver >::value();
  }
  static const char* value(const ::ros_control_boilerplate::driverRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ros_control_boilerplate::driverResponse> should match
// service_traits::MD5Sum< ::ros_control_boilerplate::driver >
template<>
struct MD5Sum< ::ros_control_boilerplate::driverResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ros_control_boilerplate::driver >::value();
  }
  static const char* value(const ::ros_control_boilerplate::driverResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ros_control_boilerplate::driverResponse> should match
// service_traits::DataType< ::ros_control_boilerplate::driver >
template<>
struct DataType< ::ros_control_boilerplate::driverResponse>
{
  static const char* value()
  {
    return DataType< ::ros_control_boilerplate::driver >::value();
  }
  static const char* value(const ::ros_control_boilerplate::driverResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROS_CONTROL_BOILERPLATE_MESSAGE_DRIVER_H
