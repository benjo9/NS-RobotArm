// Generated by gencpp from file ros_control_boilerplate/velocity.msg
// DO NOT EDIT!


#ifndef ROS_CONTROL_BOILERPLATE_MESSAGE_VELOCITY_H
#define ROS_CONTROL_BOILERPLATE_MESSAGE_VELOCITY_H

#include <ros/service_traits.h>


#include <ros_control_boilerplate/velocityRequest.h>
#include <ros_control_boilerplate/velocityResponse.h>


namespace ros_control_boilerplate
{

struct velocity
{

typedef velocityRequest Request;
typedef velocityResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct velocity
} // namespace ros_control_boilerplate


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ros_control_boilerplate::velocity > {
  static const char* value()
  {
    return "6f5723450e3c67d0d72065dca6e91464";
  }

  static const char* value(const ::ros_control_boilerplate::velocity&) { return value(); }
};

template<>
struct DataType< ::ros_control_boilerplate::velocity > {
  static const char* value()
  {
    return "ros_control_boilerplate/velocity";
  }

  static const char* value(const ::ros_control_boilerplate::velocity&) { return value(); }
};


// service_traits::MD5Sum< ::ros_control_boilerplate::velocityRequest> should match
// service_traits::MD5Sum< ::ros_control_boilerplate::velocity >
template<>
struct MD5Sum< ::ros_control_boilerplate::velocityRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ros_control_boilerplate::velocity >::value();
  }
  static const char* value(const ::ros_control_boilerplate::velocityRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ros_control_boilerplate::velocityRequest> should match
// service_traits::DataType< ::ros_control_boilerplate::velocity >
template<>
struct DataType< ::ros_control_boilerplate::velocityRequest>
{
  static const char* value()
  {
    return DataType< ::ros_control_boilerplate::velocity >::value();
  }
  static const char* value(const ::ros_control_boilerplate::velocityRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ros_control_boilerplate::velocityResponse> should match
// service_traits::MD5Sum< ::ros_control_boilerplate::velocity >
template<>
struct MD5Sum< ::ros_control_boilerplate::velocityResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ros_control_boilerplate::velocity >::value();
  }
  static const char* value(const ::ros_control_boilerplate::velocityResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ros_control_boilerplate::velocityResponse> should match
// service_traits::DataType< ::ros_control_boilerplate::velocity >
template<>
struct DataType< ::ros_control_boilerplate::velocityResponse>
{
  static const char* value()
  {
    return DataType< ::ros_control_boilerplate::velocity >::value();
  }
  static const char* value(const ::ros_control_boilerplate::velocityResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROS_CONTROL_BOILERPLATE_MESSAGE_VELOCITY_H
