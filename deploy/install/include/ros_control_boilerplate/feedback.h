// Generated by gencpp from file ros_control_boilerplate/feedback.msg
// DO NOT EDIT!


#ifndef ROS_CONTROL_BOILERPLATE_MESSAGE_FEEDBACK_H
#define ROS_CONTROL_BOILERPLATE_MESSAGE_FEEDBACK_H

#include <ros/service_traits.h>


#include <ros_control_boilerplate/feedbackRequest.h>
#include <ros_control_boilerplate/feedbackResponse.h>


namespace ros_control_boilerplate
{

struct feedback
{

typedef feedbackRequest Request;
typedef feedbackResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct feedback
} // namespace ros_control_boilerplate


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ros_control_boilerplate::feedback > {
  static const char* value()
  {
    return "64b7d5a934e60038fcb2666a62ef99e5";
  }

  static const char* value(const ::ros_control_boilerplate::feedback&) { return value(); }
};

template<>
struct DataType< ::ros_control_boilerplate::feedback > {
  static const char* value()
  {
    return "ros_control_boilerplate/feedback";
  }

  static const char* value(const ::ros_control_boilerplate::feedback&) { return value(); }
};


// service_traits::MD5Sum< ::ros_control_boilerplate::feedbackRequest> should match
// service_traits::MD5Sum< ::ros_control_boilerplate::feedback >
template<>
struct MD5Sum< ::ros_control_boilerplate::feedbackRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ros_control_boilerplate::feedback >::value();
  }
  static const char* value(const ::ros_control_boilerplate::feedbackRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ros_control_boilerplate::feedbackRequest> should match
// service_traits::DataType< ::ros_control_boilerplate::feedback >
template<>
struct DataType< ::ros_control_boilerplate::feedbackRequest>
{
  static const char* value()
  {
    return DataType< ::ros_control_boilerplate::feedback >::value();
  }
  static const char* value(const ::ros_control_boilerplate::feedbackRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ros_control_boilerplate::feedbackResponse> should match
// service_traits::MD5Sum< ::ros_control_boilerplate::feedback >
template<>
struct MD5Sum< ::ros_control_boilerplate::feedbackResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ros_control_boilerplate::feedback >::value();
  }
  static const char* value(const ::ros_control_boilerplate::feedbackResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ros_control_boilerplate::feedbackResponse> should match
// service_traits::DataType< ::ros_control_boilerplate::feedback >
template<>
struct DataType< ::ros_control_boilerplate::feedbackResponse>
{
  static const char* value()
  {
    return DataType< ::ros_control_boilerplate::feedback >::value();
  }
  static const char* value(const ::ros_control_boilerplate::feedbackResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROS_CONTROL_BOILERPLATE_MESSAGE_FEEDBACK_H
