#!/usr/bin/env python

from __future__ import print_function

import rospy
from std_msgs.msg import String
import odrive
from odrive.enums import *
import time
import math

from ODrive_Interface_test.srv import *

print("Waiting for services")
rospy.wait_for_service('drive_axis')
rospy.wait_for_service('axis_position')
rospy.wait_for_service('axis_requested_state')
drive_axis = rospy.ServiceProxy('drive_axis', driver, persistent = True)
axis_position = rospy.ServiceProxy('axis_position', feedback, persistent = True)
axis_requested_state = rospy.ServiceProxy('axis_requested_state', requested_state, persistent = True)

resp0 = axis_requested_state.call(requested_stateRequest(6, 0))
print(resp0)

resp0 = axis_requested_state.call(requested_stateRequest(5, 0))
print(resp0)

t0 = time.monotonic()
while True:
    setpoint = 100000.0 * math.sin((time.monotonic() - t0)*1.5)
    print("goto " + str(int(setpoint)))
    resp2 = drive_axis.call(driverRequest(5, setpoint))
    time.sleep(0.01)
"""
resp1 = axis_position.call(feedbackRequest(6))
print(resp1)

resp2 = drive_axis.call(driverRequest(6, 100000))
print(resp2)

time.sleep(5)

resp1 = axis_position.call(feedbackRequest(6))
print(resp1)

resp2 = drive_axis.call(driverRequest(6, 0))
print(resp2)

time.sleep(5)

resp1 = axis_position.call(feedbackRequest(6))
print(resp1)
"""
drive_axis.close()
axis_position.close()
axis_requested_state.close()
